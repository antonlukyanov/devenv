++ поддержать директивы #build_stop, #lake_stop
++ поддержать линковку библиотек
++ режим нечувствительности к регистру в именах файлов
++ добавить переменную prerun
++ ошибка с пробелами в путях
++ сократить списки путей поиска *.h до необходимого минимума
++ ошибка со слэшем в makefile и списке файлов для копирования

2008.12

++ исправить prerun так, чтобы построение дерева зависимостей происходило после него
   -- в текущей версии это происходит именно так
++ научить выводить дерево зависимостей (dep)
   -- функция уже была, теперь она вынесена в интерфейс командной строки
++ зацикливается построитель дерева зависимостей при наличии циклической зависимости (dep)
   -- на самом деле зацикливался уже кэш информации о файлах -- при обработке
   -- найденного файла он пытался превратить все его зависимости в fileinfo,
   -- для чего снова вызывал себя для поиска файла-зависимости и т.д.
++ добавить режим вывода выполняемых команд полностью
++ передавать cwd в prepare()
   -- сделана передача базовой директории и директории проекта
++ разобраться с дубликатами в fulldeplist (см. mk_inc_paths())
   -- собственно дубликатов и не было, из функции mk_inc_paths() удален код,
   -- гарантировавший отсутствие дубликатов
++ bug при сравнении полного текущего пути и пути из LAKE_BASE на включение (base)
   -- убрал эту задачу, поскольку отсутствует нормальный переносимый метод ее решения
++ написать документацию по llake (doc)
++ разобраться с модулями, импортируемыми только для использования в файле правил
++ разобраться с бардаком с do_strip и strip()
   -- параметр do_strip заменен на опцию llake
   -- действие strip теперь не зависит от того, собирался ли выполняемый файл
++ убрать явное указание расширения в директиве linklib (rlu)
   -- добавлен параметр lake.lib2fname(), преобразующий имя библиотеки в имя файла.
++ встроить модификацию makefile при экспорте (export)
++ разобраться с бардаком с src2obj() и src2obj_id()

-- написать документацию по mingw.rlu (doc)

-- поддержать сборку не из текущей директории (base)
   (чтобы можно было указывать путь к llk-файлу)

[optional]

-- Добавить возможность сборки по одному файлу без создания llk-файла, без всяких Uses.
   Например:
     llake -single make foo_test.cc foo.dll mingw dll debug
   То есть примерный формат командной строки такой:
     llake -single action start dest rules [options ...]

   Плюс, это автоматически сработает, если все нужные h-ники и исходники лежат в одном каталоге.

-- добавить поддержку сборки произвольного модуля в exe (base)
   (если он содержит тестовый main() внутри ifdef)
