Руководство по миграции с lake на llake

Версии с 1281 по 1289 содержат историю полухаотических эволюций
схемы линковки библиотек в процессе поиска оптимальной схемы.

Основные проблемы при переходе на новую версию lake связаны с проектами,
в которых собирается dll, используемая для линковки из других проектов.

---------------------------------------------------------------------------------------

Старая схема сборки и линковки dll:

1. Интерфейс библиотеки module.dll описывается в файле module.h,
который представляет собой чистый C-заголовок, не включающий других заголовков;
2. Соответствующий файл реализации module.cc не содержит кода, но содержит
команду связи с библиотекой вида /*#link_lib:module/module.a*/;
3. Реализация интерфейса библиотеки содержится в файле module_dll.cc,
который включает файл module.h, но экранирует это включение от утилиты lake;
4. Проекты, желающие линковаться с библиотекой, включают файл module.h
обычным образом (без экранирования).

В результате:

1. При сборке самой библиотеки стартовым является файл module_dll.cc, а включение 
из него файла module.h экранировано, поэтому файлы module.h и module.cc
остаются невидимыми для lake'а, соответственно компиляция и линковка файла 
module.cc вообще не происходит.

2. При сборке приложения, включающего файл module.h обычным образом (без экранирования),
происходит компиляция и линковка файла module.cc, который инициирует линковку
с библиотекой импорта module.a.

---------------------------------------------------------------------------------------

Новая схема:

1. Интерфейс библиотеки module.dll описывается в файле module.exp,
который представляет собой чистый C-заголовок, не включающий других заголовков
(аналог module.h в старой схеме);
2. Реализация интерфейса библиотеки содержится в файле module.cc (аналог module_dll.cc
в старой схеме), который обычным образом включает файл module.exp;
3. Для внешней линковки используется файл module_dll.h, который обычным образом включает 
файл module.exp и содержит команду связи с библиотекой вида /*#link_lib:module.a*/
(здесь в отличие от старой схемы не указывается путь к библиотеке);
4. Проекты, желающие линковаться с библиотекой, включают файл module_dll.h
обычным образом (без экранирования).

Фактически файл module_dll.h выполняет роль пары файлов module.h и module.cc
из старой схемы.

Отличие exp-файла от обычного заголовка состоит в том, что соответствующее правило
в lake'е не производит связывание с таким файлом исходника (в старой схеме этот эффект
достигался экранированием).
Новая схема существенно лучше старой тем, что она не исключает библиотеку и файл с описанием 
ее интерфейса из общего списка зависимостей, в результате чего становится корректным
процедура экспорта как самой библиотеки, так и приложения, ее использующего.

---------------------------------------------------------------------------------------

Использование информации о версии из репозитория

Старая схема:

Файл svn_ver обновляется перед сборкой проекта, но включается с экранированием от lake'а.
В результате lake не учитывает обновленность этого файла и не пересобирает проект
при обновлении идентификатора версии.
Новый идентификатор версии появляется только после так или иначе инициированной
перекомпиляции C-файла, включающего файл svn_ver.

Новая схема:

Файл revision.svn (аналог svn_ver в старой схеме) автоматически обновляется перед сборкой 
проекта, и включается обычным образом.
Зависимости от этого файла обрабатывается обычным образом.
В результате при каждой сборке происходит обновление файла revision.svn и перекомпиляция
включающего его исходника.

---------------------------------------------------------------------------------------

Алгоритм миграции:

1. Перенести (sic!) содержимое файла module_dll.cc в файл module.cc;
2. Удалить файл module_dll.cc;
3. В получившемся файле module.cc заменить включение файла svn_ver на 
   включение файла revision.svn и перенести включение в неэкранируемую область;
4. Переименовать файл module.h в module.exp;
5. В (новом) файле module.cc заменить включение файла module.h на 
   включение файла module.exp и перенести включение в неэкранируемую область;
6. Создать файл module_dll.h, включающий директиву /*#link_lib:module.a*/
   и включение файла module.exp;
7. Если предполагается сохранить файл lake.lak, то заменить в нем имя стартового
   файла с module_dll.cc на module.cc и имя файла с меткой версии с svn_ver на revision.svn;
8. Удалить файлы svn_ver и, если поддержка старой схемы сборки не нужна, то удалить 
   также файлы build.lak и module.o;

--
