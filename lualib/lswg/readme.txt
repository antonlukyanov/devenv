lswg, (c) ltwood

==============================================================

lswg -- простая графическая библиотека, предоставляющая
lua-скриптам доступ к графической подсистеме gdi32
семейства платформ win32.

==============================================================

Система координат

Начало системы координат находится в левом верхнем
углу окна, причем ось Oy направлена вниз, а ось Ox --
вправо.

==============================================================

Задание цветов

Цвета задаются в виде BGR, где R -- интенсивность
красной компоненты цвета, G -- интенсивность зеленой
компоненты, B -- интенсивность синей компоненты.
Каждая интенсивность может изменяться от 0 до 255.
Цвет задается целым числом, 16-ричная запись которого
имеет вид 0xBBGGRR.

==============================================================

Обзор функций

--------------------------------------------------------------

open_window( [ lx, ly [, cr] ] )

Создает окно шириной lx и высотой ly пикселов.
При вызове без аргументов создается окно размером
640 на 480 пикселов.
Следует обратить внимание, что здесь задаются внешние
размеры окна, а размеры доступной для рисования
клиентской области окна будут меньше (см. функцию getsize()).
Если указать cr=true, то эти размеры будут использованы для
задания области рисования. В этом случае getsize() вернет
эти же размеры.

--------------------------------------------------------------

clear( col )

Очищает окно, используя для заливки цвет col.

--------------------------------------------------------------

line( x1, y1, x2, y2, col )

Рисует линию с началом в точке (x1, y1) и концом
в точке (x2, y2), используя для рисования цвет col.

--------------------------------------------------------------

ellipse( x, y, rx, ry, extcol [, intcol] )

Рисует эллипс с центром в точке (x, y) и радиусами
(rx, ry), используя для рисования цвет extcol.
Если задан параметр intcol, то внутренность эллипса
заливается цветом intcol.

--------------------------------------------------------------

rectangle( x1, y1, x2, y2, extcol [, intcol] )

Рисует контур прямоугольника с углами в точках (x1, y1) и
(x2, y2), используя для рисования цвет extcol.
Если задан параметр intcol, то внутренность прямоугольника
заливается цветом intcol.

--------------------------------------------------------------

putpixel( x, y, col )

Рисует точку с координатами (x, y) и цветом col.

--------------------------------------------------------------

setfont(face, size [, is_bold [, is_italic]] )

Устанавливает текущий шрифт.
Задается имя гарнитуры, размер в пунктах и необязательные 
признаки полужирности и наклона.
Имена гарнитур: "Arial", "Times New Roman" и т.д.

--------------------------------------------------------------

settextalign(align)

Устанавливает выравнивание текста относительно заданной точки привязки.
Строка align может содержать буквы 'lrctbB', которые означают следующее:
'l' точка привязки задает левый край области вывода текста
'r' точка привязки задает правый край области вывода текста
't' точка привязки задает верхний край области вывода текста
'b' точка привязки задает нижний край области вывода текста
'B' точка привязки задает уровень базовой линии шрифта

--------------------------------------------------------------
puttext(x, y, text, col [, bgcol] )

Выводит строку text стандартным шрифтом цвета col.
Точка (x, y) будет левым верхним углом прямоугольника,
занимаемого строкой.
Если задан параметр bgcol, то занимаемый строкой
прямоугольник перед выводом заполняется цветом bgcol.
Если параметр bgcol не задан, то строка выводится поверх
существующего изображения.

--------------------------------------------------------------

setxor( mode )

Устанавливает режим вывода изображения.
Параметр имеет тип boolean и может принимать значения
true и false.
Если передано значение true, то включается режим XOR,
иначе используется обычный режим вывода (COPY).

--------------------------------------------------------------

setauto( mode )

Переключает режим автоматического обновления окна.
Параметр имеет тип boolean и может принимать значения
true и false.
Если передано значение true, то включается режим автоматического
обновления окна, иначе используется режим ручного обновления.
По умолчанию установлен режим автоматического обновления окна

--------------------------------------------------------------

update()

Принудительно обновляет содержимое окна.
Используется в режиме ручного обновления для вывода
в окно актуального содержимого.

--------------------------------------------------------------

sleep( [ms] )

Дополнительная функция, осуществляющая задержку
длительностью ms миллисекунд.
При вызове без аргумента или при нулевом значении
аргумента делается минимальная возможная задержка.

--------------------------------------------------------------

tm = time()

Получение текущзего времени в миллисекундах.

--------------------------------------------------------------

lx, ly = getsize()

Возвращает ширину и высоту клиентской области окна.

--------------------------------------------------------------

key, ch = getkey()

Возвращает код нажатой клавиши и ASCII-код соответствующего символа
или nil если не была нажата ни одна клавиша.
Возвращается номер т.н. виртуальной клавиши (virtual key).

--------------------------------------------------------------

x, y = getmouse()

Возвращает координаты, в которых было произведено нажатие кнопки мыши
или nil если кнопка мыши не была нажата.

--------------------------------------------------------------

idx = load( fname )

Загружает в память изображение из файла с именем fname, 
присваивает ему номер и возвращает присвоенный номер.
Поддержаны все варианты формата Windows Bitmap.

--------------------------------------------------------------

free( idx )

Выгружает из памяти изображение с номером idx.

--------------------------------------------------------------

lx, ly = imgsize()

Возвращает ширину и высоту изображения с номером idx.

--------------------------------------------------------------

put( idx, x, y, [use_mask] )

Выводит изображение с номером idx в позиции (x, y),
причем в эту точку помещается левый верхний угол изображения.
Если в аргументе use_mask передано булевское значение true,
то белый цвет на изображении будет считаться прозрачным.

--------------------------------------------------------------

fill( idx )

Замощает окно копиями изображения с номером idx.

==============================================================

Использование библиотеки

Для непосредственного использования из скрипта необходимо
написать оператор вида

  require "lswg"

Можно также воспользоваться библиотекой поддержки
libswg, написав оператор

  require "libswg"

Библиотека libswg сама загружает библиотеку lswg и
предоставляет дополнительную полезную функцию

  lswg.rgb(R, G, B)

Эта функция возвращает числовое задание цвета
с компонентами R, G, B.

Кроме того, библиотека libswg создает в таблице lswg
таблицу виртуальных клавиш с именем lswg.vk.
В этой таблице собраны коды некоторых наиболее полезных
клавиш.
Таблица позволяет получить код клавиши по ее имени либо
наоборот -- имя клавиши по ее коду.

==============================================================

История версий

ver. 1.01, 2006.11.19

Первая публичная версия, написана за пару часов в выходные.
Реализует только рисование простейших графических примитивов
и ввод с клавиатуры (виртуальные клавиши).

ver. 1.02, 2006.11.20

Bugfix: из буферного битмапа всегда копировался прямоугольник
размером 640x480.

ver. 1.03, 2006.11.22

Bugfix: исправлена ошибка в перерисовке окна, из-за которой
происходила постоянная перерисовка, что приводило к излишней
загрузке процессора.

ver. 1.04, 2006.12.04

Добавлена поддержка переключения страниц (функции setauto() и update()).

ver. 1.05, 2006.12.09

Добавлена возможность загрузки и вывода битмапов.
При выводе поддержан режим замощения и прозрачности.

ver. 1.06, 2006.12.10

Добавлена функция получения размера загруженного битмапа.

ver. 1.07, 2007.01.20

Добавлена функция получения нажатий кнопки мыши.

ver. 1.08, 2007.03.24

Увеличен порог на число загруженных битмапов.

ver. 1.09, 2007.04.06

Исправлена проблема с выводом прозрачного текста.

ver. 1.10, 2007.04.16

Исправлена еще одна проблема с влиянием цветов текста на BitBlt.

ver. 1.11, 2012.07.08

Реализована синхронизация с обратным ходом луча при обновлении окна.

==============================================================
