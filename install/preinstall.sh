# Automatically generated by tools/mk_preinstall.lua, no hands!

echo Building installation environment...

UNAME=`uname`
TPU=../third-party

if [[ $UNAME =~ "MINGW32_NT.*" ]]
then
  patch --output=$TPU/lua51/src/linit_istools.c $TPU/lua51/src/linit.c $TPU/lua-addons/istools/lua-istools.diff
  cp $TPU/lua-addons/istools/istools.c $TPU/lua51/src
else
  sudo apt-get install libreadline-dev
fi

SRC_LIST="
  $TPU/lua51/src/lapi.c \
  $TPU/lua51/src/lauxlib.c \
  $TPU/lua51/src/lbaselib.c \
  $TPU/lua51/src/lcode.c \
  $TPU/lua51/src/ldblib.c \
  $TPU/lua51/src/ldebug.c \
  $TPU/lua51/src/ldo.c \
  $TPU/lua51/src/ldump.c \
  $TPU/lua51/src/lfunc.c \
  $TPU/lua51/src/lgc.c \
  $TPU/lua51/src/liolib.c \
  $TPU/lua51/src/llex.c \
  $TPU/lua51/src/lmathlib.c \
  $TPU/lua51/src/lmem.c \
  $TPU/lua51/src/loadlib.c \
  $TPU/lua51/src/lobject.c \
  $TPU/lua51/src/lopcodes.c \
  $TPU/lua51/src/loslib.c \
  $TPU/lua51/src/lparser.c \
  $TPU/lua51/src/lstate.c \
  $TPU/lua51/src/lstring.c \
  $TPU/lua51/src/lstrlib.c \
  $TPU/lua51/src/ltable.c \
  $TPU/lua51/src/ltablib.c \
  $TPU/lua51/src/ltm.c \
  $TPU/lua51/src/lundump.c \
  $TPU/lua51/src/lvm.c \
  $TPU/lua51/src/lzio.c \
  $TPU/lua51/src/lua.c"

echo Building temp/standalone-lua.exe...

if [[ $UNAME =~ "MINGW32_NT.*" ]]
then
  /mingw/bin/g++ -O2 -Wall -otemp/standalone-lua.exe $SRC_LIST $TPU/lua51/src/istools.c $TPU/lua51/src/linit_istools.c
  /mingw/bin/strip temp/standalone-lua.exe
  rm $TPU/lua51/src/istools.c $TPU/lua51/src/linit_istools.c
else
  g++ -O2 -Wall -DLUA_USE_LINUX -otemp/standalone-lua $SRC_LIST $TPU/lua51/src/linit.c -ldl -lreadline
  strip temp/standalone-lua
fi
