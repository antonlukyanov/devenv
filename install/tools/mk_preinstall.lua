--[[
  Генерирование скрипта preinstall.sh, собирающего окружения времени инсталяции.

  Данный скрипт (mk_preinstall.lua) работает только в полностью установленном рабочем окружении.
  Не следует запускать этот скрипт во время инсталяцией рабочего окружения.
  Во время инсталяцией следует использовать скрипт preinstall.sh, расположенный в репозитории.
--]]

fmt = string.format
tpu_path = '../third-party'  -- from devenv/install
lua_path = '$TPU/lua52/src'

lua_modules = dofile('../../third-party/lua-addons/setup/lua_modules.lua') -- from here

file = assert(io.open('../preinstall.sh', 'wt'))

file:write('#!/bin/sh\n')
file:write('# Automatically generated by tools/mk_preinstall.lua, no hands!\n\n')

file:write("echo Building installation environment...\n\n")

file:write('UNAME=`uname`\n')
file:write('TPU=', tpu_path, '\n\n')

file:write(fmt([[
case $UNAME in
  MINGW32_NT*)
    patch --output=%s/linit_istools.c %s/linit.c $TPU/lua-addons/istools/lua-istools.diff
    cp $TPU/lua-addons/istools/istools.c %s
  ;;
  *)
    # sudo apt-get install libreadline-dev
  ;;
esac
]], lua_path, lua_path, lua_path))

file:write('SRC_LIST="\n')
for j, fn in ipairs(lua_modules) do
  if fn ~= 'linit' then
    file:write('  ' .. lua_path .. '/' .. fn .. '.c \\\n')
  end
end
file:write('  ' .. lua_path .. '/lua.c"\n\n')

file:write("echo Building temp/standalone-lua.exe...\n\n")

file:write(fmt([=[
if [[ $UNAME =~ "MINGW32_NT.*" ]]
then
  g++ -O2 -Wall -DLUA_COMPAT_MODULE -otemp/standalone-lua.exe $SRC_LIST %s/istools.c %s/linit_istools.c
  strip temp/standalone-lua.exe
  rm %s/istools.c %s/linit_istools.c
else
  g++ -O2 -Wall -DLUA_USE_LINUX -DLUA_COMPAT_MODULE -otemp/standalone-lua $SRC_LIST %s/linit.c -ldl -lreadline
  strip temp/standalone-lua
fi
]=], lua_path, lua_path, lua_path, lua_path, lua_path))

file:close()
