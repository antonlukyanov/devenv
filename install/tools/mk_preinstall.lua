--[[
  Генерирование скрипта preinstall.sh, собирающего окружения времени инсталяции.

  Данный скрипт (mk_preinstall.lua) работает только в полностью установленном рабочем окружении.
  Не следует запускать этот скрипт во время инсталяцией рабочего окружения.
  Во время инсталяцией следует использовать скрипт preinstall.sh, расположенный в репозитории.
--]]

tpu_path = '../third-party'  -- from devenv/install
lua_path = '$TPU/lua51/src'

lua_modules = dofile('../../third-party/lua-addons/setup/lua_modules.lua') -- from here

file = assert(io.open('../preinstall.sh', 'wt'))

file:write('# Automatically generated by tools/mk_preinstall.lua, no hands!\n\n')

file:write("echo Building installation environment...\n\n")

file:write('UNAME=`uname`\n')
file:write('TPU=', tpu_path, '\n\n')

file:write([=[
if [[ $UNAME =~ "MINGW32_NT.*" ]]
then
  patch --output=$TPU/lua51/src/linit_istools.c $TPU/lua51/src/linit.c $TPU/lua-addons/istools/lua-istools.diff
  cp $TPU/lua-addons/istools/istools.c $TPU/lua51/src
else
  sudo apt-get install libreadline-dev
fi

]=])

file:write('SRC_LIST="\n')
for j, fn in ipairs(lua_modules) do
  if fn ~= 'linit' then
    file:write('  ' .. lua_path .. '/' .. fn .. '.c \\\n')
  end
end
file:write('  ' .. lua_path .. '/lua.c"\n\n')

file:write("echo Building temp/standalone-lua.exe...\n\n")

file:write([=[
if [[ $UNAME =~ "MINGW32_NT.*" ]]
then
  /mingw/bin/g++ -O2 -Wall -otemp/standalone-lua.exe $SRC_LIST $TPU/lua51/src/istools.c $TPU/lua51/src/linit_istools.c
  /mingw/bin/strip temp/standalone-lua.exe
  rm $TPU/lua51/src/istools.c $TPU/lua51/src/linit_istools.c $TPU/lua51/src/linit.c
else
  g++ -O2 -Wall -DLUA_USE_LINUX -otemp/standalone-lua $SRC_LIST $TPU/lua51/src/linit.c -ldl -lreadline
  strip temp/standalone-lua
fi
]=])

file:close()
